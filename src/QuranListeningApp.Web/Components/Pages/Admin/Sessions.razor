@page "/admin/sessions"
@layout AdminLayout
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using QuranListeningApp.Application.Services
@using QuranListeningApp.Domain.Enums
@attribute [Authorize(Roles = "Admin")]
@inject ListeningSessionService SessionService
@inject UserService UserService
@inject NavigationManager Navigation

<PageTitle>ÿ¨ŸÑÿ≥ÿßÿ™ ÿßŸÑÿ≥ŸÖÿßÿπ</PageTitle>

<div class="sessions-container">
    <div class="page-header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h3>ÿ¨ŸÑÿ≥ÿßÿ™ ÿßŸÑÿ≥ŸÖÿßÿπ</h3>
                <p class="text-muted mb-0">ÿ•ÿØÿßÿ±ÿ© Ÿàÿπÿ±ÿ∂ ÿ¨ŸÑÿ≥ÿßÿ™ ÿßŸÑÿ≥ŸÖÿßÿπ</p>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-secondary" @onclick="GoBack">
                    <i class="fas fa-arrow-left me-2"></i>
                    ÿßŸÑÿπŸàÿØÿ©
                </button>
                <button class="btn btn-success" @onclick="AddSession">
                    <i class="fas fa-plus me-2"></i>
                    ÿ•ÿ∂ÿßŸÅÿ© ÿ¨ŸÑÿ≥ÿ©
                </button>
            </div>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="loading">ÿ¨ÿßÿ±Ÿä ÿßŸÑÿ™ÿ≠ŸÖŸäŸÑ...</div>
    }
    else if (!sessions.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">üìñ</div>
            <p>ŸÑÿß ÿ™Ÿàÿ¨ÿØ ÿ¨ŸÑÿ≥ÿßÿ™ ÿ®ÿπÿØ</p>
            <button class="btn-primary" @onclick="AddSession">ÿ•ÿ∂ÿßŸÅÿ© ÿ£ŸàŸÑ ÿ¨ŸÑÿ≥ÿ©</button>
        </div>
    }
    else
    {
        <div class="session-list">
            @foreach (var session in sessions)
            {
                <div class="session-card" @onclick="() => ViewSession(session.Id)">
                    <div class="session-header">
                        <div class="student-name">@session.Student?.FullNameArabic</div>
                        <div class="session-date">@session.SessionDate.ToString("dd/MM/yyyy")</div>
                    </div>
                    <div class="session-details">
                        <div class="detail-row">
                            <span class="label">ÿßŸÑÿ≥Ÿàÿ±ÿ©:</span>
                            <span class="value">@session.SurahNumber</span>
                        </div>
                        <div class="detail-row">
                            <span class="label">ŸÖŸÜ ÿ¢Ÿäÿ©:</span>
                            <span class="value">@session.FromAyahNumber - @session.ToAyahNumber</span>
                        </div>
                        @if (session.MajorErrorsCount > 0 || session.MinorErrorsCount > 0)
                        {
                            <div class="detail-row">
                                <span class="label">ÿßŸÑÿ£ÿÆÿ∑ÿßÿ°:</span>
                                <span class="value error-count">
                                    @if (session.MajorErrorsCount > 0)
                                    {
                                        <span>ÿ¨ŸÑŸä: @session.MajorErrorsCount</span>
                                    }
                                    @if (session.MinorErrorsCount > 0)
                                    {
                                        @if (session.MajorErrorsCount > 0)
                                        {
                                            <span> | </span>
                                        }
                                        <span>ÿÆŸÅŸä: @session.MinorErrorsCount</span>
                                    }
                                </span>
                            </div>
                        }
                        @if (session.IsCompleted)
                        {
                            <div class="detail-row">
                                <span class="badge-passed">‚úì ÿßÿ¨ÿ™ÿßÿ≤</span>
                            </div>
                        }
                    </div>
                    <div class="session-footer">
                        <span class="teacher-name">@session.Teacher?.FullNameArabic</span>
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .sessions-container {
        padding: 12px;
        direction: rtl;
    }

    .page-header {
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #dee2e6;
    }

    .page-header h3 {
        margin: 0;
        font-size: 24px;
        font-weight: 600;
        color: #495057;
    }

    .loading {
        text-align: center;
        padding: 40px;
        color: #666;
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
    }

    .empty-icon {
        font-size: 64px;
        margin-bottom: 16px;
        opacity: 0.5;
    }

    .empty-state p {
        color: #999;
        margin-bottom: 20px;
    }

    .btn-primary {
        background: #667eea;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 600;
        cursor: pointer;
    }

    .session-list {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .session-card {
        background: white;
        border-radius: 10px;
        padding: 14px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.08);
        cursor: pointer;
        transition: all 0.2s;
    }

    .session-card:active {
        transform: scale(0.98);
    }

    .session-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .student-name {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .session-date {
        font-size: 12px;
        color: #666;
        background: #f5f5f5;
        padding: 4px 10px;
        border-radius: 12px;
    }

    .session-details {
        display: flex;
        flex-direction: column;
        gap: 6px;
        margin-bottom: 10px;
    }

    .detail-row {
        display: flex;
        gap: 8px;
        font-size: 13px;
    }

    .detail-row .label {
        color: #666;
        min-width: 60px;
    }

    .detail-row .value {
        color: #333;
        font-weight: 500;
    }

    .error-count {
        color: #f44336;
        font-weight: 600;
    }

    .badge-passed {
        display: inline-block;
        padding: 4px 12px;
        background: #4caf50;
        color: white;
        border-radius: 12px;
        font-size: 13px;
        font-weight: 600;
    }

    .session-footer {
        padding-top: 10px;
        border-top: 1px solid #f0f0f0;
    }

    .teacher-name {
        font-size: 12px;
        color: #667eea;
    }
</style>

@code {
    private List<Domain.Entities.ListeningSession> sessions = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadSessions();
    }

    private async Task LoadSessions()
    {
        isLoading = true;
        var allSessions = await SessionService.GetAllSessionsAsync();
        sessions = allSessions.OrderByDescending(s => s.SessionDate).ToList();
        isLoading = false;
    }

    private void AddSession() => Navigation.NavigateTo("/admin/sessions/add");
    private void ViewSession(Guid id) => Navigation.NavigateTo($"/admin/sessions/view/{id}");
    private void GoBack() => Navigation.NavigateTo("/admin/dashboard");
}
