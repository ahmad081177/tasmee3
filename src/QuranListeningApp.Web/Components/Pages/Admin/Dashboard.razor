@page "/admin"
@page "/admin/dashboard"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Authorization
@using QuranListeningApp.Application.Services
@using QuranListeningApp.Domain.Enums
@attribute [Authorize(Roles = "Admin")]
@inject UserService UserService
@inject ListeningSessionService SessionService
@inject NavigationManager Navigation

<PageTitle>لوحة التحكم - المسؤول</PageTitle>

<div class="admin-container">
    <div class="admin-header">
        <h1>مرحباً في لوحة التحكم</h1>
        <p>نظام إدارة سماع القرآن الكريم</p>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="sr-only">جاري التحميل...</span>
            </div>
        </div>
    }
    else
    {
        <div class="dashboard-grid">
            <div class="stat-card stat-card-admin">
                <div class="stat-icon">👨‍💼</div>
                <div class="stat-content">
                    <h3>@adminCount</h3>
                    <p>المسؤولون</p>
                </div>
            </div>

            <div class="stat-card stat-card-teacher">
                <div class="stat-icon">👨‍🏫</div>
                <div class="stat-content">
                    <h3>@teacherCount</h3>
                    <p>المعلمون</p>
                </div>
            </div>

            <div class="stat-card stat-card-student">
                <div class="stat-icon">👨‍🎓</div>
                <div class="stat-content">
                    <h3>@studentCount</h3>
                    <p>الطلاب</p>
                </div>
            </div>

            <div class="stat-card stat-card-session">
                <div class="stat-icon">📖</div>
                <div class="stat-content">
                    <h3>@sessionCount</h3>
                    <p>جلسات السماع</p>
                </div>
            </div>
        </div>

        <div class="quick-actions">
            <h2>الإجراءات السريعة</h2>
            <div class="action-buttons">
                <button class="btn btn-primary" @onclick='() => Navigation.NavigateTo("/admin/users")'>
                    <span>📝</span> إدارة المستخدمين
                </button>
                <button class="btn btn-success" @onclick='() => Navigation.NavigateTo("/admin/sessions")'>
                    <span>📚</span> إدارة الجلسات
                </button>
                <button class="btn btn-info" @onclick="NavigateToReports">
                    <span>📊</span> التقارير
                </button>
                <button class="btn btn-warning" @onclick="NavigateToSettings">
                    <span>⚙️</span> الإعدادات
                </button>
            </div>
        </div>

        <div class="recent-activity">
            <h2>النشاط الأخير</h2>
            <p class="text-muted">سيتم عرض آخر الجلسات والنشاطات هنا...</p>
        </div>
    }
</div>

<style>
    .admin-container {
        padding: 30px;
        direction: rtl;
        max-width: 1400px;
        margin: 0 auto;
    }

    .admin-header {
        text-align: center;
        margin-bottom: 40px;
    }

    .admin-header h1 {
        color: #333;
        font-size: 32px;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .admin-header p {
        color: #666;
        font-size: 16px;
    }

    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 40px;
    }

    .stat-card {
        background: white;
        border-radius: 12px;
        padding: 25px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        display: flex;
        align-items: center;
        gap: 20px;
        transition: transform 0.3s;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0,0,0,0.15);
    }

    .stat-icon {
        font-size: 48px;
    }

    .stat-content h3 {
        font-size: 36px;
        font-weight: bold;
        margin: 0;
        color: #333;
    }

    .stat-content p {
        font-size: 16px;
        color: #666;
        margin: 5px 0 0 0;
    }

    .stat-card-admin {
        border-right: 4px solid #667eea;
    }

    .stat-card-teacher {
        border-right: 4px solid #28a745;
    }

    .stat-card-student {
        border-right: 4px solid #17a2b8;
    }

    .stat-card-session {
        border-right: 4px solid #ffc107;
    }

    .quick-actions {
        background: white;
        border-radius: 12px;
        padding: 30px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        margin-bottom: 30px;
    }

    .quick-actions h2 {
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
    }

    .action-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
    }

    .btn {
        padding: 15px 25px;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .btn-success {
        background: #28a745;
        color: white;
    }

    .btn-info {
        background: #17a2b8;
        color: white;
    }

    .btn-warning {
        background: #ffc107;
        color: #333;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }

    .recent-activity {
        background: white;
        border-radius: 12px;
        padding: 30px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .recent-activity h2 {
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
    }

    .text-center {
        text-align: center;
        padding: 40px;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
        border: 0.3em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    @@keyframes spinner-border {
        to { transform: rotate(360deg); }
    }

    .text-muted {
        color: #666;
    }
</style>

@code {
    private bool isLoading = true;
    private int adminCount = 0;
    private int teacherCount = 0;
    private int studentCount = 0;
    private int sessionCount = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userCounts = await UserService.GetUserCountsByRoleAsync();
            adminCount = userCounts.GetValueOrDefault(UserRole.Admin, 0);
            teacherCount = userCounts.GetValueOrDefault(UserRole.Teacher, 0);
            studentCount = userCounts.GetValueOrDefault(UserRole.Student, 0);
            
            sessionCount = await SessionService.GetSessionCountAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToUsers() => Navigation.NavigateTo("/admin/users");
    private void NavigateToSessions() => Navigation.NavigateTo("/admin/sessions");
    private void NavigateToReports() => Navigation.NavigateTo("/admin/reports");
    private void NavigateToSettings() => Navigation.NavigateTo("/admin/settings");
}
