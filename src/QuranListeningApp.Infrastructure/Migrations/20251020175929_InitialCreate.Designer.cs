// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuranListeningApp.Infrastructure.Data;

#nullable disable

namespace QuranListeningApp.Infrastructure.Migrations
{
    [DbContext(typeof(QuranAppDbContext))]
    [Migration("20251020175929_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Timestamp")
                        .HasDatabaseName("IX_AuditLogs_Timestamp");

                    b.HasIndex("UserId");

                    b.HasIndex("EntityType", "EntityId")
                        .HasDatabaseName("IX_AuditLogs_EntityType_EntityId");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.ListeningSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromAyahNumber")
                        .HasColumnType("int");

                    b.Property<int>("FromSurahNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("MajorErrorsCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("MinorErrorsCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SessionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ToAyahNumber")
                        .HasColumnType("int");

                    b.Property<int>("ToSurahNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsCompleted")
                        .HasDatabaseName("IX_ListeningSessions_IsCompleted");

                    b.HasIndex("SessionDate")
                        .HasDatabaseName("IX_ListeningSessions_SessionDate");

                    b.HasIndex("StudentUserId")
                        .HasDatabaseName("IX_ListeningSessions_StudentUserId");

                    b.HasIndex("TeacherUserId")
                        .HasDatabaseName("IX_ListeningSessions_TeacherUserId");

                    b.ToTable("ListeningSessions", (string)null);
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.SurahReference", b =>
                {
                    b.Property<int>("SurahNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsMakki")
                        .HasColumnType("bit");

                    b.Property<string>("SurahNameArabic")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SurahNameEnglish")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalAyahs")
                        .HasColumnType("int");

                    b.HasKey("SurahNumber");

                    b.ToTable("SurahReferences", (string)null);
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullNameArabic")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GradeLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("FullNameArabic")
                        .HasDatabaseName("IX_Users_FullNameArabic");

                    b.HasIndex("IdNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_IdNumber")
                        .HasFilter("[IdNumber] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .HasDatabaseName("IX_Users_PhoneNumber");

                    b.HasIndex("Role")
                        .HasDatabaseName("IX_Users_Role");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasDatabaseName("IX_Users_Username");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.AuditLog", b =>
                {
                    b.HasOne("QuranListeningApp.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.ListeningSession", b =>
                {
                    b.HasOne("QuranListeningApp.Domain.Entities.User", "Student")
                        .WithMany("SessionsAsStudent")
                        .HasForeignKey("StudentUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuranListeningApp.Domain.Entities.User", "Teacher")
                        .WithMany("SessionsAsTeacher")
                        .HasForeignKey("TeacherUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.User", b =>
                {
                    b.HasOne("QuranListeningApp.Domain.Entities.User", "CreatedByUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("QuranListeningApp.Domain.Entities.User", b =>
                {
                    b.Navigation("CreatedUsers");

                    b.Navigation("SessionsAsStudent");

                    b.Navigation("SessionsAsTeacher");
                });
#pragma warning restore 612, 618
        }
    }
}
